TIRPC_0.3.0 {
  global:
    # __*
    __rpc_createerr;
    __rpc_dtbsize;
    __rpc_endconf;
    __rpc_fd2sockinfo;
    __rpc_fixup_addr;
    __rpc_get_a_size;
    __rpc_get_local_uid;
    __rpc_get_t_size;
    __rpc_getconf;
    __rpc_getconfip;
    __rpc_nconf2fd;
    __rpc_nconf2fd_flags;
    __rpc_nconf2sockinfo;
    __rpc_rawcombuf;
    __rpc_seman2socktype;
    __rpc_setconf;
    __rpc_sockinfo2netid;
    __rpc_sockisbound;
    __rpc_socktype2seman;
    __rpc_taddr2uaddr_af;
    __rpc_uaddr2taddr_af;
    __rpcgettp;

    # _*
    _authenticate;
    _get_next_token;
    _gss_authenticate;
    _null_auth;
    _rpc_dtablesize;
    _seterr_reply;
    _svcauth_none;
    _svcauth_short;
    _svcauth_unix;

    # a*
    authdes_create;
    authdes_seccreate;
    authnone_create;
    authunix_create;
    authunix_create_default;

    # b*
    bindresvport;
    bindresvport_sa;

    # c*
    callrpc;
    clnt_broadcast;
    clnt_create;
    clnt_create_timed;
    clnt_create_vers;
    clnt_create_vers_timed;
    clnt_dg_create;
    clnt_pcreateerror;
    clnt_perrno;
    clnt_perror;
    clnt_raw_create;
    clnt_spcreateerror;
    clnt_sperrno;
    clnt_sperror;
    clnt_tli_create;
    clnt_tp_create;
    clnt_tp_create_timed;
    clnt_vc_create;
    clntraw_create;
    clnttcp_create;
    clntudp_bufcreate;
    clntudp_create;
    clntunix_create;

    # e*
    endnetconfig;
    endnetpath;

    # f*
    freenetconfigent;

    # g*
    get_myaddress;
    getnetconfig;
    getnetconfigent;
    getnetpath;
    getrpcport;

    # n*
    nc_perror;
    nc_sperror;

    # p*
    pmap_getmaps;
    pmap_getport;
    pmap_rmtcall;
    pmap_set;
    pmap_unset;

    # r*
    registerrpc;
    rpc_broadcast;
    rpc_broadcast_exp;
    rpc_call;
    rpc_control;
    rpc_createerr;
    rpc_nullproc;
    rpc_reg;
    rpcb_getaddr;
    rpcb_getmaps;
    rpcb_gettime;
    rpcb_rmtcall;
    rpcb_set;
    rpcb_taddr2uaddr;
    rpcb_uaddr2taddr;
    rpcb_unset;

    # s*
    setnetconfig;
    setnetpath;
    svc_auth_reg;
    svc_create;
    svc_dg_create;
    svc_dg_enablecache;
    svc_exit;
    svc_fd_create;
    svc_fdset;
    svc_getreq;
    svc_getreq_common;
    svc_getreq_poll;
    svc_getreqset;
    svc_maxfd;
    svc_raw_create;
    svc_reg;
    svc_register;
    svc_run;
    svc_sendreply;
    svc_tli_create;
    svc_tp_create;
    svc_unreg;
    svc_unregister;
    svc_vc_create;
    svcerr_auth;
    svcerr_decode;
    svcerr_noproc;
    svcerr_noprog;
    svcerr_progvers;
    svcerr_systemerr;
    svcerr_weakauth;
    svcfd_create;
    svcraw_create;
    svctcp_create;
    svcudp_bufcreate;
    svcudp_create;
    svcunix_create;
    svcunixfd_create;

    # t*
    taddr2uaddr;

    # u*
    uaddr2taddr;

    # x*
    xdr_accepted_reply;
    xdr_array;
    xdr_authunix_parms;
    xdr_bool;
    xdr_bytes;
    xdr_callhdr; xdr_callmsg;
    xdr_char;
    xdr_des_block;
    xdr_double;
    xdr_enum;
    xdr_float;
    xdr_free;
    xdr_hyper;
    xdr_int16_t;
    xdr_int32_t;
    xdr_int64_t;
    xdr_int8_t;
    xdr_int;
    xdr_long;
    xdr_longlong_t;
    xdr_netbuf;
    xdr_netobj;
    xdr_opaque;
    xdr_opaque_auth;
    xdr_pmap;
    xdr_pmaplist;
    xdr_pmaplist_ptr;
    xdr_pointer;
    xdr_quad_t;
    xdr_reference;
    xdr_rejected_reply;
    xdr_replymsg;
    xdr_rmtcall_args;
    xdr_rmtcallres;
    xdr_rpcb;
    xdr_rpcb_entry;
    xdr_rpcb_entry_list_ptr;
    xdr_rpcb_rmtcallargs;
    xdr_rpcb_rmtcallres;
    xdr_rpcb_stat;
    xdr_rpcb_stat_byvers;
    xdr_rpcblist;
    xdr_rpcblist_ptr;
    xdr_rpcbs_addrlist;
    xdr_rpcbs_addrlist_ptr;
    xdr_rpcbs_proc;
    xdr_rpcbs_rmtcalllist;
    xdr_rpcbs_rmtcalllist_ptr;
    xdr_short;
    xdr_string;
    xdr_u_char;
    xdr_u_hyper;
    xdr_u_int16_t;
    xdr_u_int32_t;
    xdr_u_int64_t;
    xdr_u_int8_t;
    xdr_u_int;
    xdr_u_long;
    xdr_u_longlong_t;
    xdr_u_quad_t;
    xdr_u_short;
    xdr_uint16_t;
    xdr_uint32_t;
    xdr_uint64_t;
    xdr_uint8_t;
    xdr_union;
    xdr_vector;
    xdr_void;
    xdr_wrapstring;
    xdrmem_create;
    xdrrec_create;
    xdrrec_endofrecord;
    xdrrec_eof;
    xdrrec_skiprecord;
    xdrstdio_create;
    xprt_register;
    xprt_unregister;
    # GSS-API symbols (conditionally included)
@GSS_SYMBOLS@
    # DES crypto symbols (conditionally included)
@DES_SYMBOLS@
    # RPC database symbols (conditionally included)
@RPCDB_SYMBOLS@

  local:
    *;
};

TIRPC_0.3.1 {
# GSS-API symbols (conditionally included)
@GSS_SYMBOLS_031@
} TIRPC_0.3.0;

TIRPC_0.3.2 {
    getnetname;
    getpublicandprivatekey;
    getpublickey;
    host2netname;
    key_decryptsession;
    key_decryptsession_pk;
    key_encryptsession;
    key_encryptsession_pk;
    key_gendes;
    key_get_conv;
    key_setsecret;
    key_secretkey_is_set;
    key_setnet;
    netname2host;
    netname2user;
    rtime;
    user2netname;
    xdr_cryptkeyarg;
    xdr_cryptkeyarg2;
    xdr_cryptkeyres;
    xdr_getcredres;
    xdr_key_netstarg;
    xdr_key_netstres;
    xdr_keybuf;
    xdr_keystatus;
    xdr_netnamestr;
    xdr_unixcred;
} TIRPC_0.3.1;

TIRPC_0.3.3 {
    __getpublickey_LOCAL;
    __key_decryptsession_pk_LOCAL;
    __key_encryptsession_pk_LOCAL;
    __key_gendes_LOCAL;
    xdr_sizeof;
    authdes_pk_create;
    svc_pollfd;
    svc_max_pollfd;
} TIRPC_0.3.2;

TIRPC_PRIVATE {
  global:
    __libc_clntudp_bufcreate;
  # private, but used by rpcbind:
    __svc_clean_idle; svc_auth_none; libtirpc_set_debug;
};
